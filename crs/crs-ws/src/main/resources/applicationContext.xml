<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:s="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
                http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
                http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
                http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
				http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    <context:property-placeholder location="classpath:application.properties"/>
     
    <tx:annotation-driven />
    <context:annotation-config />
	<import resource="classpath:application-im-common-security-config.xml" />
	<import resource="classpath:applicationContext-CrowdClient.xml" />
	
	<s:global-method-security pre-post-annotations="enabled"/>
    
    <s:http pattern="/api/**" create-session="stateless" auto-config="false"
    		entry-point-ref="restAuthenticationEntryPoint"
    		security-context-repository-ref="securityContextHolder" use-expressions="true">
		<s:custom-filter ref="tokenTaker" position="FIRST"/>
		<security:access-denied-handler error-page="/error/401"/>
		<s:intercept-url pattern="/api/project/hi" access="hasRole('ROLE_ihtstdo-crs-viewers')" />
		<s:intercept-url pattern="/api/project/topsecret" access="hasRole('ROLE_ihtsdo-crs-administrators')" />
		<s:intercept-url pattern="/api/request/list/submitted" method="GET"
			access="hasRole('ROLE_ihtsdo-crs-administrators')" />
		<s:intercept-url pattern="/api/request/**" method="GET" 
			access="hasAnyRole('ROLE_ihtsdo-crs-administrators','ROLE_ihtsdo-crs-managers','ROLE_ihtsdo-crs-members','ROLE_ihtsdo-crs-staff','ROLE_ihtsdo-crs-requestors','ROLE_ihtsdo-crs-partners','ROLE_ihtstdo-crs-viewers')" />
		<s:intercept-url pattern="/api/request/**" method="POST" 
			access="hasAnyRole('ROLE_ihtsdo-crs-administrators','ROLE_ihtsdo-crs-managers','ROLE_ihtsdo-crs-members','ROLE_ihtsdo-crs-staff','ROLE_ihtsdo-crs-requestors','ROLE_ihtsdo-crs-partners','ROLE_ihtstdo-crs-viewers')" />
	</s:http>
	<s:http pattern="/error/**" security="none" />
    
    <bean id="tokenTaker" class="org.ihtsdotools.crs.filter.TokenFilter">
    	<constructor-arg name="userService" ref="crowdUserDetailsService"/>
    </bean>
    <bean id="securityContextHolder" class="org.ihtsdotools.crs.security.CrsStatelessSCRepository"/>
    <bean id="restAuthenticationEntryPoint" class="org.ihtsdotools.crs.security.RestAuthenEntryPoint" />
    <import resource="classpath*:spring-beans.xml"/>
    <context:component-scan base-package="org.ihtsdotools.crs.dao" />
    <context:component-scan base-package="org.ihtsdotools.crs.api.impl" />
 	
 	<jpa:repositories base-package="org.ihtsdotools.crs.dao" />
 	
    <!-- <bean id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName">
            <value>org.hsqldb.jdbcDriver</value>
        </property>
        <property name="url">
            <value>jdbc:hsqldb:mem:crs</value>
        </property>
        <property name="username">
            <value>sa</value>
        </property>
        <property name="password">
            <value></value>
        </property>
    </bean> -->
    <bean id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName">
            <value>${datasource.driver-class-name}</value>
        </property>
        <property name="url">
            <value>${datasource.url}</value>
        </property>
        <property name="username">
            <value>${datasource.username}</value>
        </property>
        <property name="password">
            <value>${datasource.password}</value>
        </property>
    </bean>
    <!-- <jdbc:initialize-database data-source="dataSource">
    	<jdbc:script location="classpath:dbscripts/db_init.sql"/>
    </jdbc:initialize-database> -->
	<bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
		<property name="dataSource" ref="dataSource" />
		<property name="changeLog" value="classpath:dbscripts/crs-changelog.xml" />
	</bean>
 
    <bean id="entityManagerFactory"
        class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="persistenceUnitName" value="crsdb" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
            	<property name="generateDdl" value="false" />
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">none</prop>
            </props>
        </property>
    </bean>
 
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    
    <bean id="requestConfigLoader" class="org.ihtsdotools.crs.dto.helper.config.RequestItemConfig">
        <constructor-arg>
            <map>
                <entry key="NEW_CONCEPT" value="classpath:requestItemConfig/NewConcept.json"/>
                <entry key="NEW_DESCRIPTION" value="classpath:requestItemConfig/NewDescription.json"/>
                <entry key="NEW_RELATIONSHIP" value="classpath:requestItemConfig/NewRelationship.json"/>
                <entry key="CHANGE_RETIRE_CONCEPT" value="classpath:requestItemConfig/ChangeRetireConcept.json"/>
                <entry key="CHANGE_RETIRE_DESCRIPTION" value="classpath:requestItemConfig/ChangeRetireDescription.json"/>
                <entry key="CHANGE_RETIRE_RELATIONSHIP" value="classpath:requestItemConfig/ChangeRetireRelationship.json"/>
            </map>
        </constructor-arg>
    </bean>

    <bean id="dozerBeanMapper" class="org.dozer.DozerBeanMapper">
        <property name="mappingFiles">
            <list>
                <value>dozer-mapping.xml</value>
            </list>
        </property>
    </bean>

    <bean id="requestBuilder" class="org.ihtsdotools.crs.dto.helper.RequestBuilder"/>
    <bean id="requestItemValidator" class="org.ihtsdotools.crs.dto.helper.validation.RequestItemValidator"/>

    <!-- Jackson Mapper -->
    <bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper" />
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="objectMapper" />
        <property name="targetMethod" value="configure" />
        <property name="arguments">
            <list>
                <value type="com.fasterxml.jackson.databind.DeserializationFeature">FAIL_ON_UNKNOWN_PROPERTIES</value>
                <value>false</value>
            </list>
        </property>
    </bean>
</beans>